// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String       @id @default(uuid())
  name                    String
  email                   String       @unique
  password_hash           String
  registration_number     Int          @unique
  department              String
  ramal                   Int
  role                    String       @default("MEMBER")
  created_at              DateTime     @default(now())
  departments_responsible Department[] @relation("UserDepartmentsResponsible")
  created_requests        Job[]        @relation("UserCreatedJobs")
  responsible_requests    Job[]        @relation("UserResponsibleJobs")

  @@map("users")
}

model Department {
  id           String    @id @default(uuid())
  name         String
  sigla        String
  created_at   DateTime  @default(now())
  responsables User[]    @relation("UserDepartmentsResponsible")
  services     Service[]
  Job          Job[]

  @@map("departments")
}

model Service {
  id             String @id @default(uuid())
  name           String
  description    String
  execution_time Float

  department_id String
  department    Department @relation(fields: [department_id], references: [id])

  Job Job[]

  @@map("services")
}

model Job {
  id                  String    @id @default(uuid())
  local               String
  problem_description String
  priority            String
  occurs_at           DateTime?
  start_time          Float     @default(0)
  elapsed_time        Float     @default(0)
  status              String    @default("Aguardando atendimento")
  running             Boolean   @default(false)
  accomplished        Boolean   @default(false)
  created_at          DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  user_id String
  user    User   @relation("UserCreatedJobs", fields: [user_id], references: [id])

  responsable_id String?
  responsable    User?   @relation("UserResponsibleJobs", fields: [responsable_id], references: [id])

  department_id String
  department    Department @relation(fields: [department_id], references: [id])

  service_id String?
  service    Service? @relation(fields: [service_id], references: [id])

  @@map("jobs")
}
